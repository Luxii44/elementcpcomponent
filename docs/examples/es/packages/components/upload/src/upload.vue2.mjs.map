{"version":3,"file":"upload.vue2.mjs","sources":["../../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent as DO_defineComponent } from 'vue';\nexport default /*#__PURE__*/ DO_defineComponent({\r\n  name: 'WmUpload',\r\n});\n</script>\n<script setup lang=\"ts\">\r\nimport { ref,watch} from 'vue'\r\n// import * as bConf from '@wmcomponent/utils'\r\nimport * as extend from './upload'\r\nimport {ElNotification, UploadRawFile} from \"element-plus\"\r\nimport type { UploadProps,UploadInstance,UploadFile,UploadFiles  } from 'element-plus'\r\nimport { Plus,UploadFilled,CloseBold,Close,Document } from '@element-plus/icons-vue'\r\n\r\n\r\n/*\r\nfileList的文件对象定义\r\n    uid——文件id\r\n    name——文件名称\r\n    url——文件url路径\r\n    icon——文件类型的图标\r\n    MIME——MIME文件类型\r\n    Loading——上传加载\r\n    UploadFaild——是否上传失败\r\n*/\r\nconst FileList = ref<any[]>([])\r\nconst emits = defineEmits(['update:fileList','show_pic',\"uploadSuccess\",\"selectedFile\"])\r\nconst props=defineProps({\r\n    readonly:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    fileList:{\r\n        type:Array,\r\n        default:()=>{\r\n            return []\r\n        }\r\n    },\r\n    UploadUrl:{\r\n        type:String,\r\n        default:\"\"\r\n    },\r\n    UploadHeader:{\r\n        type:Object,\r\n        default:()=>{\r\n            return {}\r\n        }\r\n    },\r\n    Uploadmethod:{\r\n        type:String,\r\n        default:\"post\"\r\n    },\r\n    UploadData:{\r\n        type:Object,\r\n        default:()=>{\r\n            return {}\r\n        }\r\n    },\r\n    UploadDarg:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    UploadMultiple:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    AutoUpload:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    previewHeight:{\r\n        type:String,\r\n        default:\"50vh\"\r\n    }\r\n})\r\nwatch(()=>props.fileList,(newVal)=>{\r\n    if (props.fileList.length>0){\r\n        FileList.value=newVal\r\n    }\r\n})\r\nwatch(FileList, (count, prevCount) => {\r\n    emits('update:fileList', FileList.value);\r\n});\r\nconst uploadRef = ref<UploadInstance>()\r\nconst handleChange: UploadProps['onChange'] = (uploadFile:UploadFile, uploadFiles:UploadFiles) => {\r\n    if (!props.AutoUpload){\r\n        extend.getMIME(uploadFile.url!).then(res=>{\r\n            FileList.value.unshift({uid:uploadFile.uid,name:uploadFile.name,url:uploadFile.url!,MIME:res})\r\n            if (extend.checkFileType(res)==\"image\"){\r\n                dialogImageVisible.value = true\r\n                isShowCropper.value = true\r\n                tempPic.value=uploadFile.url!\r\n            }\r\n            console.log(FileList.value)\r\n        })\r\n    }\r\n}\r\nconst beforeAvatarUpload: UploadProps['beforeUpload'] = (rawFile:UploadRawFile) => {\r\n    console.log(rawFile,11)\r\n    // extend.getMIME(rawFile.url).then(res=>{\r\n    //     FileList.value.unshift({uid:rawFile.uid,name:rawFile.name,url:rawFile.url!,MIME:res})\r\n    //     console.log(FileList.value)\r\n    //     emits(\"selectedFile\",FileList.value[0])\r\n    // })\r\n}\r\nconst uploadeDocError=(error: Error, uploadFile: UploadFile, uploadFiles: UploadFiles)=>{\r\n    let a=FileList.value.filter(item=>{\r\n        return item.uid==uploadFile.uid\r\n    })\r\n    a[0].UploadFaild=true\r\n    a[0].Loading=false\r\n    ElNotification({\r\n        title: '文档上传',\r\n        message: '上传失败，请重试'\r\n    })\r\n}\r\nconst uploadeDocSuccess: UploadProps['onSuccess'] = (response,uploadFile) => {\r\n    console.log(response,uploadFile)\r\n    ElNotification({\r\n        title: '文档上传',\r\n        message: '上传成功！'\r\n    })\r\n    emits('uploadSuccess', response);\r\n}\r\n\r\n  //打开文件或者照片\r\nconst showFile=(val:any)=>{\r\n  if (extend.checkFileType(val.MIME)==\"image\"){\r\n    dialogImageVisible.value = true\r\n    tempPic.value=val.url\r\n    emits('show_pic',val)\r\n  }\r\n  else {\r\n    window.open(val.name)\r\n  }\r\n}\r\nconst deleteFile=(index:number)=>{\r\n  FileList.value.splice(index,1)\r\n}\r\n\r\nlet dialogImageVisible=ref(false)\r\nlet isShowCropper=ref(false)\r\nlet tempPic=ref(\"\")\r\nconst closeDialog = ()=>{\r\n    dialogImageVisible.value=false\r\n    isShowCropper.value=false\r\n}\r\nconst aaa = (e:any)=>{\r\n    emits(\"selectedFile\",e)\r\n    closeDialog()\r\n}\r\n</script>\r\n<!-- \r\n    element-plus组件内部不支持再向外提供插槽\r\n -->\r\n<template>\r\n    <div class=\"upload-box\" :style=\"{flexDirection:UploadDarg ? 'column' : 'row'}\">\r\n        <div v-show=\"!readonly\" style=\"margin:0 10px;\">\r\n            <el-upload \r\n            class=\"avatar-uploader\"\r\n            ref=\"uploadRef\"\r\n            :action=\"UploadUrl\"\r\n            :show-file-list=\"false\"\r\n            list-type=\"picture\"\r\n            :headers=\"UploadHeader\"\r\n            :method=\"Uploadmethod\"\r\n            :data=\"UploadData\"\r\n            :drag=\"UploadDarg\"\r\n            :multiple=\"UploadMultiple\"\r\n            :auto-upload=\"AutoUpload\"\r\n            :before-upload=\"beforeAvatarUpload\"\r\n            :on-success=\"uploadeDocSuccess\"\r\n            :on-error=\"uploadeDocError\"\r\n            :on-change=\"handleChange\"\r\n            >\r\n                <div v-if=\"UploadDarg\">\r\n                    <el-icon><upload-filled /></el-icon>\r\n                </div>\r\n                <el-icon v-if=\"AutoUpload && !UploadDarg\" class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n                <template v-if=\"!AutoUpload  && !UploadDarg\" #trigger>\r\n                    <el-icon class=\"avatar-uploader-icon\"><Plus /></el-icon>\r\n                </template>\r\n            </el-upload>\r\n        </div>\r\n        <div :style=\"{marginTop:UploadDarg ? '50px' : '0'}\" class=\"fileList-box\">\r\n            <el-card v-for=\"(item, index) in FileList\" :key=\"index\" class=\"file-info\" :body-style=\"{ padding: '0px' }\">\r\n                <div v-loading=\"item.Loading\" class=\"mask\">\r\n                    <div v-if=\"item.UploadFaild\" class=\"mask faild\"><el-icon color=\"red\" size=\"30\"><CloseBold /></el-icon></div>\r\n                </div>\r\n                <div v-if=\"!readonly\">\r\n                    <el-icon class=\"close\" :color=\"item.UploadFaild ? '#fff' : '#000'\" @click.stop=\"deleteFile(index)\"><Close /></el-icon>\r\n                </div>\r\n                <el-image v-if=\"extend.checkFileType(item.MIME)=='image'\"\r\n                    class=\"imgSize\"\r\n                    :src=\"item.url\" \r\n                    fit=\"fill\"\r\n                    @click=\"showFile(item)\"\r\n                    />\r\n                <div v-else class=\"other-type\" @click=\"showFile(item)\">\r\n                    <i :class=\"item.icon\" style=\"font-size:24px;margin-bottom: 5px;\"><el-icon><Document /></el-icon></i>\r\n                    <el-tooltip :content=\"item.name\" placement=\"bottom\" effect=\"dark\">\r\n                        <p class=\"file-name\">{{item.name}}</p>\r\n                    </el-tooltip>\r\n                </div>\r\n            </el-card>\r\n            <div v-if=\"readonly && FileList.length==0\">\r\n                <div class=\"no-content\">{{'没有附件'}}</div>\r\n            </div>\r\n        </div>\r\n        <el-dialog v-model=\"dialogImageVisible\" width=\"80vw\" title=\"预览\" @close=\"closeDialog\">\r\n            <div :style=\"{height:previewHeight}\">\r\n                <WmCropper v-show=\"isShowCropper\" :pic=\"tempPic\" @savePic=\"aaa\" />\r\n                <div v-show=\"!isShowCropper\">\r\n                    <el-button v-if=\"!props.AutoUpload\" type=\"primary\" @click=\"isShowCropper=true\">裁剪</el-button>\r\n                    <div class=\"preview\">\r\n                        <img :src=\"tempPic\" class=\"preview-img\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>"],"names":["DO_defineComponent","extend.getMIME","extend.checkFileType"],"mappings":"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"}